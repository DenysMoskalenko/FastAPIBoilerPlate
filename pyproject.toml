[tool.poetry]
name = "boilerplate"
version = "0.1.0"
description = "Boilerplate"
authors = [
    "DenysMoskalenko <denys.moskalenko@nixs.com>",
]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.12.1"
fastapi = "^0.111.0"
pydantic = { version = "^2.7.1", extras = ["email"] }
pydantic-settings = "^2.0.3"
psycopg = "^3.1.19"
sqlalchemy = "^2.0.30"
uvicorn = {extras = ["standart"], version = "^0.29.0"}

[tool.poetry.dev-dependencies]
pre-commit = "^3.7.1"
coverage = "^7.5.1"
httpx = "^0.27.0"
pytest = "^8.2.1"
pytest-asyncio = "^0.23.7"
pytest-mock = "^3.14.0"
polyfactory = "^2.16.0"
ruff = "^0.4.5"

[tool.pytest.ini_options]
asyncio_mode = "auto"
#filterwarnings = "ignore::DeprecationWarning:passlib"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E", # Errors
    "F", # Pyflakes
    "I", # isort
    "T20", # flake8-print
]
pydocstyle.convention = 'google'

[tool.ruff.lint.isort]
known-local-folder = ["tests", "app", "scripts"]
split-on-trailing-comma = true
combine-as-imports = true
case-sensitive = false
detect-same-package = true
order-by-type = false  # Sorting of all imported objects (functions, classes, etc.) regardless of their type
force-sort-within-sections = true  # Don't sort straight-style imports before from-style imports.


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
