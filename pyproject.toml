[project]
name = "boilerplate"
version = "0.1.0"
description = "Add your description here"
authors = [
    "DenysMoskalenko <denys.moskalenko@nixs.com>",
]
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    "fastapi>=0.115.14",
    "pydantic-settings>=2.10.1",
    "pydantic[email]>=2.11.7",
    "uvicorn[standard]>=0.34.3",
]

[dependency-groups]
dev = [
    "ruff>=0.12.1",
    "pre-commit>=4.2.0",
    "httpx>=0.28.1",
    "polyfactory>=2.21.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "testcontainers[postgres]>=4.10.0",
]


[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
#filterwarnings = [
#    "ignore::DeprecationWarning:passlib",
#    "ignore::DeprecationWarning:jose"
#]

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [
    #    Include ignore folders if needed
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E", # Errors
    "F", # Pyflakes
    "I", # isort
    "T20", # flake8-print
]
pydocstyle.convention = 'google'

[tool.ruff.lint.isort]
known-local-folder = ["tests", "app", "scripts"]
split-on-trailing-comma = true
combine-as-imports = true
case-sensitive = false
detect-same-package = true
order-by-type = false  # Sorting of all imported objects (functions, classes, etc.) regardless of their type
force-sort-within-sections = true  # Don't sort straight-style imports before from-style imports.
